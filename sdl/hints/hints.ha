use sdl::v2c::*;
use types::c;

// TODO doc strings, remove hints about non-free systems.

export def ACCELEROMETER_AS_JOYSTICK = "SDL_ACCELEROMETER_AS_JOYSTICK";
export def ALLOW_ALT_TAB_WHILE_GRABBED = "SDL_ALLOW_ALT_TAB_WHILE_GRABBED";
export def ALLOW_TOPMOST = "SDL_ALLOW_TOPMOST";
export def ANDROID_APK_EXPANSION_MAIN_FILE_VERSION = "SDL_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION";
export def ANDROID_APK_EXPANSION_PATCH_FILE_VERSION = "SDL_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION";
export def ANDROID_BLOCK_ON_PAUSE = "SDL_ANDROID_BLOCK_ON_PAUSE";
export def ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO = "SDL_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO";
export def ANDROID_TRAP_BACK_BUTTON = "SDL_ANDROID_TRAP_BACK_BUTTON";
export def APP_NAME = "SDL_APP_NAME";
export def APPLE_TV_CONTROLLER_UI_EVENTS = "SDL_APPLE_TV_CONTROLLER_UI_EVENTS";
export def APPLE_TV_REMOTE_ALLOW_ROTATION = "SDL_APPLE_TV_REMOTE_ALLOW_ROTATION";
export def AUDIO_CATEGORY = "SDL_AUDIO_CATEGORY";
export def AUDIO_DEVICE_APP_NAME = "SDL_AUDIO_DEVICE_APP_NAME";
export def AUDIO_DEVICE_STREAM_NAME = "SDL_AUDIO_DEVICE_STREAM_NAME";
export def AUDIO_DEVICE_STREAM_ROLE = "SDL_AUDIO_DEVICE_STREAM_ROLE";
export def AUDIO_RESAMPLING_MODE = "SDL_AUDIO_RESAMPLING_MODE";
export def AUTO_UPDATE_JOYSTICKS = "SDL_AUTO_UPDATE_JOYSTICKS";
export def AUTO_UPDATE_SENSORS = "SDL_AUTO_UPDATE_SENSORS";
export def BMP_SAVE_LEGACY_FORMAT = "SDL_BMP_SAVE_LEGACY_FORMAT";
export def DISPLAY_USABLE_BOUNDS = "SDL_DISPLAY_USABLE_BOUNDS";
export def EMSCRIPTEN_ASYNCIFY = "SDL_EMSCRIPTEN_ASYNCIFY";
export def EMSCRIPTEN_KEYBOARD_ELEMENT = "SDL_EMSCRIPTEN_KEYBOARD_ELEMENT";
export def ENABLE_SCREEN_KEYBOARD = "SDL_ENABLE_SCREEN_KEYBOARD";
export def ENABLE_STEAM_CONTROLLERS = "SDL_ENABLE_STEAM_CONTROLLERS";
export def EVENT_LOGGING = "SDL_EVENT_LOGGING";
export def FORCE_RAISEWINDOW = "SDL_HINT_FORCE_RAISEWINDOW";
export def FRAMEBUFFER_ACCELERATION = "SDL_FRAMEBUFFER_ACCELERATION";
export def GAMECONTROLLERCONFIG = "SDL_GAMECONTROLLERCONFIG";
export def GAMECONTROLLERCONFIG_FILE = "SDL_GAMECONTROLLERCONFIG_FILE";
export def GAMECONTROLLERTYPE = "SDL_GAMECONTROLLERTYPE";
export def GAMECONTROLLER_IGNORE_DEVICES = "SDL_GAMECONTROLLER_IGNORE_DEVICES";
export def GAMECONTROLLER_IGNORE_DEVICES_EXCEPT = "SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT";
export def GAMECONTROLLER_USE_BUTTON_LABELS = "SDL_GAMECONTROLLER_USE_BUTTON_LABELS";
export def GRAB_KEYBOARD = "SDL_GRAB_KEYBOARD";
export def HIDAPI_IGNORE_DEVICES = "SDL_HIDAPI_IGNORE_DEVICES";
export def IDLE_TIMER_DISABLED = "SDL_IOS_IDLE_TIMER_DISABLED";
export def IME_INTERNAL_EDITING = "SDL_IME_INTERNAL_EDITING";
export def IME_SHOW_UI = "SDL_IME_SHOW_UI";
export def IME_SUPPORT_EXTENDED_TEXT = "SDL_IME_SUPPORT_EXTENDED_TEXT";
export def IOS_HIDE_HOME_INDICATOR = "SDL_IOS_HIDE_HOME_INDICATOR";
export def JOYSTICK_ALLOW_BACKGROUND_EVENTS = "SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS";
export def JOYSTICK_ARCADESTICK_DEVICES = "SDL_JOYSTICK_ARCADESTICK_DEVICES";
export def JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED = "SDL_JOYSTICK_ARCADESTICK_DEVICES_EXCLUDED";
export def JOYSTICK_BLACKLIST_DEVICES = "SDL_JOYSTICK_BLACKLIST_DEVICES";
export def JOYSTICK_BLACKLIST_DEVICES_EXCLUDED = "SDL_JOYSTICK_BLACKLIST_DEVICES_EXCLUDED";
export def JOYSTICK_FLIGHTSTICK_DEVICES = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES";
export def JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED = "SDL_JOYSTICK_FLIGHTSTICK_DEVICES_EXCLUDED";
export def JOYSTICK_GAMECUBE_DEVICES = "SDL_JOYSTICK_GAMECUBE_DEVICES";
export def JOYSTICK_GAMECUBE_DEVICES_EXCLUDED = "SDL_JOYSTICK_GAMECUBE_DEVICES_EXCLUDED";
export def JOYSTICK_HIDAPI = "SDL_JOYSTICK_HIDAPI";
export def JOYSTICK_HIDAPI_GAMECUBE = "SDL_JOYSTICK_HIDAPI_GAMECUBE";
export def JOYSTICK_GAMECUBE_RUMBLE_BRAKE = "SDL_JOYSTICK_GAMECUBE_RUMBLE_BRAKE";
export def JOYSTICK_HIDAPI_JOY_CONS = "SDL_JOYSTICK_HIDAPI_JOY_CONS";
export def JOYSTICK_HIDAPI_COMBINE_JOY_CONS = "SDL_JOYSTICK_HIDAPI_COMBINE_JOY_CONS";
export def JOYSTICK_HIDAPI_VERTICAL_JOY_CONS = "SDL_JOYSTICK_HIDAPI_VERTICAL_JOY_CONS";
export def JOYSTICK_HIDAPI_LUNA = "SDL_JOYSTICK_HIDAPI_LUNA";
export def JOYSTICK_HIDAPI_NINTENDO_CLASSIC = "SDL_JOYSTICK_HIDAPI_NINTENDO_CLASSIC";
export def JOYSTICK_HIDAPI_SHIELD = "SDL_JOYSTICK_HIDAPI_SHIELD";
export def JOYSTICK_HIDAPI_PS3 = "SDL_JOYSTICK_HIDAPI_PS3";
export def JOYSTICK_HIDAPI_PS4 = "SDL_JOYSTICK_HIDAPI_PS4";
export def JOYSTICK_HIDAPI_PS4_RUMBLE = "SDL_JOYSTICK_HIDAPI_PS4_RUMBLE";
export def JOYSTICK_HIDAPI_PS5 = "SDL_JOYSTICK_HIDAPI_PS5";
export def JOYSTICK_HIDAPI_PS5_PLAYER_LED = "SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED";
export def JOYSTICK_HIDAPI_PS5_RUMBLE = "SDL_JOYSTICK_HIDAPI_PS5_RUMBLE";
export def JOYSTICK_HIDAPI_STADIA = "SDL_JOYSTICK_HIDAPI_STADIA";
export def JOYSTICK_HIDAPI_STEAM = "SDL_JOYSTICK_HIDAPI_STEAM";
export def JOYSTICK_HIDAPI_STEAMDECK = "SDL_JOYSTICK_HIDAPI_STEAMDECK";
export def JOYSTICK_HIDAPI_SWITCH = "SDL_JOYSTICK_HIDAPI_SWITCH";
export def JOYSTICK_HIDAPI_SWITCH_HOME_LED = "SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED";
export def JOYSTICK_HIDAPI_JOYCON_HOME_LED = "SDL_JOYSTICK_HIDAPI_JOYCON_HOME_LED";
export def JOYSTICK_HIDAPI_SWITCH_PLAYER_LED = "SDL_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED";
export def JOYSTICK_HIDAPI_WII = "SDL_JOYSTICK_HIDAPI_WII";
export def JOYSTICK_HIDAPI_WII_PLAYER_LED = "SDL_JOYSTICK_HIDAPI_WII_PLAYER_LED";
export def JOYSTICK_HIDAPI_XBOX = "SDL_JOYSTICK_HIDAPI_XBOX";
export def JOYSTICK_HIDAPI_XBOX_360 = "SDL_JOYSTICK_HIDAPI_XBOX_360";
export def JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED = "SDL_JOYSTICK_HIDAPI_XBOX_360_PLAYER_LED";
export def JOYSTICK_HIDAPI_XBOX_360_WIRELESS = "SDL_JOYSTICK_HIDAPI_XBOX_360_WIRELESS";
export def JOYSTICK_HIDAPI_XBOX_ONE = "SDL_JOYSTICK_HIDAPI_XBOX_ONE";
export def JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED = "SDL_JOYSTICK_HIDAPI_XBOX_ONE_HOME_LED";
export def JOYSTICK_IOKIT = "SDL_JOYSTICK_IOKIT";
export def JOYSTICK_MFI = "SDL_JOYSTICK_MFI";
export def JOYSTICK_RAWINPUT = "SDL_JOYSTICK_RAWINPUT";
export def JOYSTICK_RAWINPUT_CORRELATE_XINPUT = "SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT";
export def JOYSTICK_ROG_CHAKRAM = "SDL_JOYSTICK_ROG_CHAKRAM";
export def JOYSTICK_THREAD = "SDL_JOYSTICK_THREAD";
export def JOYSTICK_THROTTLE_DEVICES = "SDL_JOYSTICK_THROTTLE_DEVICES";
export def JOYSTICK_THROTTLE_DEVICES_EXCLUDED = "SDL_JOYSTICK_THROTTLE_DEVICES_EXCLUDED";
export def JOYSTICK_WGI = "SDL_JOYSTICK_WGI";
export def JOYSTICK_WHEEL_DEVICES = "SDL_JOYSTICK_WHEEL_DEVICES";
export def JOYSTICK_WHEEL_DEVICES_EXCLUDED = "SDL_JOYSTICK_WHEEL_DEVICES_EXCLUDED";
export def JOYSTICK_ZERO_CENTERED_DEVICES = "SDL_JOYSTICK_ZERO_CENTERED_DEVICES";
export def KMSDRM_REQUIRE_DRM_MASTER = "SDL_KMSDRM_REQUIRE_DRM_MASTER";
export def JOYSTICK_DEVICE = "SDL_JOYSTICK_DEVICE";
export def LINUX_DIGITAL_HATS = "SDL_LINUX_DIGITAL_HATS";
export def LINUX_HAT_DEADZONES = "SDL_LINUX_HAT_DEADZONES";
export def LINUX_JOYSTICK_CLASSIC = "SDL_LINUX_JOYSTICK_CLASSIC";
export def LINUX_JOYSTICK_DEADZONES = "SDL_LINUX_JOYSTICK_DEADZONES";
export def MAC_BACKGROUND_APP = "SDL_MAC_BACKGROUND_APP";
export def MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK = "SDL_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK";
export def MAC_OPENGL_ASYNC_DISPATCH = "SDL_MAC_OPENGL_ASYNC_DISPATCH";
export def MOUSE_DOUBLE_CLICK_RADIUS = "SDL_MOUSE_DOUBLE_CLICK_RADIUS";
export def MOUSE_DOUBLE_CLICK_TIME = "SDL_MOUSE_DOUBLE_CLICK_TIME";
export def MOUSE_FOCUS_CLICKTHROUGH = "SDL_MOUSE_FOCUS_CLICKTHROUGH";
export def MOUSE_NORMAL_SPEED_SCALE = "SDL_MOUSE_NORMAL_SPEED_SCALE";
export def MOUSE_RELATIVE_MODE_CENTER = "SDL_MOUSE_RELATIVE_MODE_CENTER";
export def MOUSE_RELATIVE_MODE_WARP = "SDL_MOUSE_RELATIVE_MODE_WARP";
export def MOUSE_RELATIVE_SCALING = "SDL_MOUSE_RELATIVE_SCALING";
export def MOUSE_RELATIVE_SPEED_SCALE = "SDL_MOUSE_RELATIVE_SPEED_SCALE";
export def MOUSE_RELATIVE_SYSTEM_SCALE = "SDL_MOUSE_RELATIVE_SYSTEM_SCALE";
export def MOUSE_RELATIVE_WARP_MOTION = "SDL_MOUSE_RELATIVE_WARP_MOTION";
export def MOUSE_TOUCH_EVENTS = "SDL_MOUSE_TOUCH_EVENTS";
export def MOUSE_AUTO_CAPTURE = "SDL_MOUSE_AUTO_CAPTURE";
export def NO_SIGNAL_HANDLERS = "SDL_NO_SIGNAL_HANDLERS";
export def OPENGL_ES_DRIVER = "SDL_OPENGL_ES_DRIVER";
export def ORIENTATIONS = "SDL_IOS_ORIENTATIONS";
export def POLL_SENTINEL = "SDL_POLL_SENTINEL";
export def PREFERRED_LOCALES = "SDL_PREFERRED_LOCALES";
export def QTWAYLAND_CONTENT_ORIENTATION = "SDL_QTWAYLAND_CONTENT_ORIENTATION";
export def QTWAYLAND_WINDOW_FLAGS = "SDL_QTWAYLAND_WINDOW_FLAGS";
export def RENDER_BATCHING = "SDL_RENDER_BATCHING";
export def RENDER_LINE_METHOD = "SDL_RENDER_LINE_METHOD";
export def RENDER_DIRECT3D11_DEBUG = "SDL_RENDER_DIRECT3D11_DEBUG";
export def RENDER_DIRECT3D_THREADSAFE = "SDL_RENDER_DIRECT3D_THREADSAFE";
export def RENDER_DRIVER = "SDL_RENDER_DRIVER";
export def RENDER_LOGICAL_SIZE_MODE = "SDL_RENDER_LOGICAL_SIZE_MODE";
export def RENDER_OPENGL_SHADERS = "SDL_RENDER_OPENGL_SHADERS";
export def RENDER_SCALE_QUALITY = "SDL_RENDER_SCALE_QUALITY";
export def RENDER_VSYNC = "SDL_RENDER_VSYNC";
export def RENDER_METAL_PREFER_LOW_POWER_DEVICE = "SDL_RENDER_METAL_PREFER_LOW_POWER_DEVICE";
export def ROG_GAMEPAD_MICE = "SDL_ROG_GAMEPAD_MICE";
export def ROG_GAMEPAD_MICE_EXCLUDED = "SDL_ROG_GAMEPAD_MICE_EXCLUDED";
export def PS2_DYNAMIC_VSYNC = "SDL_PS2_DYNAMIC_VSYNC";
export def RETURN_KEY_HIDES_IME = "SDL_RETURN_KEY_HIDES_IME";
export def RPI_VIDEO_LAYER = "SDL_RPI_VIDEO_LAYER";
export def SCREENSAVER_INHIBIT_ACTIVITY_NAME = "SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME";
export def THREAD_FORCE_REALTIME_TIME_CRITICAL = "SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL";
export def THREAD_PRIORITY_POLICY = "SDL_THREAD_PRIORITY_POLICY";
export def THREAD_STACK_SIZE = "SDL_THREAD_STACK_SIZE";
export def TIMER_RESOLUTION = "SDL_TIMER_RESOLUTION";
export def TOUCH_MOUSE_EVENTS = "SDL_TOUCH_MOUSE_EVENTS";
export def VITA_TOUCH_MOUSE_DEVICE = "SDL_HINT_VITA_TOUCH_MOUSE_DEVICE";
export def TV_REMOTE_AS_JOYSTICK = "SDL_TV_REMOTE_AS_JOYSTICK";
export def VIDEO_ALLOW_SCREENSAVER = "SDL_VIDEO_ALLOW_SCREENSAVER";
export def VIDEO_DOUBLE_BUFFER = "SDL_VIDEO_DOUBLE_BUFFER";
export def VIDEO_EGL_ALLOW_TRANSPARENCY = "SDL_VIDEO_EGL_ALLOW_TRANSPARENCY";
export def VIDEO_EXTERNAL_CONTEXT = "SDL_VIDEO_EXTERNAL_CONTEXT";
export def VIDEO_HIGHDPI_DISABLED = "SDL_VIDEO_HIGHDPI_DISABLED";
export def VIDEO_MAC_FULLSCREEN_SPACES = "SDL_VIDEO_MAC_FULLSCREEN_SPACES";
export def VIDEO_MINIMIZE_ON_FOCUS_LOSS = "SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS";
export def VIDEO_WAYLAND_ALLOW_LIBDECOR = "SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR";
export def VIDEO_WAYLAND_PREFER_LIBDECOR = "SDL_VIDEO_WAYLAND_PREFER_LIBDECOR";
export def VIDEO_WAYLAND_MODE_EMULATION = "SDL_VIDEO_WAYLAND_MODE_EMULATION";
export def VIDEO_WAYLAND_EMULATE_MOUSE_WARP = "SDL_VIDEO_WAYLAND_EMULATE_MOUSE_WARP";
export def VIDEO_WINDOW_SHARE_PIXEL_FORMAT = "SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT";
export def VIDEO_FOREIGN_WINDOW_OPENGL = "SDL_VIDEO_FOREIGN_WINDOW_OPENGL";
export def VIDEO_FOREIGN_WINDOW_VULKAN = "SDL_VIDEO_FOREIGN_WINDOW_VULKAN";
export def VIDEO_WIN_D3DCOMPILER = "SDL_VIDEO_WIN_D3DCOMPILER";
export def VIDEO_X11_FORCE_EGL = "SDL_VIDEO_X11_FORCE_EGL";
export def VIDEO_X11_NET_WM_BYPASS_COMPOSITOR = "SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR";
export def VIDEO_X11_NET_WM_PING = "SDL_VIDEO_X11_NET_WM_PING";
export def VIDEO_X11_WINDOW_VISUALID = "SDL_VIDEO_X11_WINDOW_VISUALID";
export def VIDEO_X11_XINERAMA = "SDL_VIDEO_X11_XINERAMA";
export def VIDEO_X11_XRANDR = "SDL_VIDEO_X11_XRANDR";
export def VIDEO_X11_XVIDMODE = "SDL_VIDEO_X11_XVIDMODE";
export def WAVE_FACT_CHUNK = "SDL_WAVE_FACT_CHUNK";
export def WAVE_RIFF_CHUNK_SIZE = "SDL_WAVE_RIFF_CHUNK_SIZE";
export def WAVE_TRUNCATION = "SDL_WAVE_TRUNCATION";
export def WINDOWS_DISABLE_THREAD_NAMING = "SDL_WINDOWS_DISABLE_THREAD_NAMING";
export def WINDOWS_ENABLE_MENU_MNEMONICS = "SDL_WINDOWS_ENABLE_MENU_MNEMONICS";
export def WINDOWS_ENABLE_MESSAGELOOP = "SDL_WINDOWS_ENABLE_MESSAGELOOP";
export def WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS = "SDL_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS";
export def WINDOWS_FORCE_SEMAPHORE_KERNEL = "SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL";
export def WINDOWS_INTRESOURCE_ICON = "SDL_WINDOWS_INTRESOURCE_ICON";
export def WINDOWS_INTRESOURCE_ICON_SMALL = "SDL_WINDOWS_INTRESOURCE_ICON_SMALL";
export def WINDOWS_NO_CLOSE_ON_ALT_F4 = "SDL_WINDOWS_NO_CLOSE_ON_ALT_F4";
export def WINDOWS_USE_D3D9EX = "SDL_WINDOWS_USE_D3D9EX";
export def WINDOWS_DPI_AWARENESS = "SDL_WINDOWS_DPI_AWARENESS";
export def WINDOWS_DPI_SCALING = "SDL_WINDOWS_DPI_SCALING";
export def WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN = "SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN";
export def WINDOW_NO_ACTIVATION_WHEN_SHOWN = "SDL_WINDOW_NO_ACTIVATION_WHEN_SHOWN";
export def WINRT_HANDLE_BACK_BUTTON = "SDL_WINRT_HANDLE_BACK_BUTTON";
export def WINRT_PRIVACY_POLICY_LABEL = "SDL_WINRT_PRIVACY_POLICY_LABEL";
export def WINRT_PRIVACY_POLICY_URL = "SDL_WINRT_PRIVACY_POLICY_URL";
export def X11_FORCE_OVERRIDE_REDIRECT = "SDL_X11_FORCE_OVERRIDE_REDIRECT";
export def XINPUT_ENABLED = "SDL_XINPUT_ENABLED";
export def DIRECTINPUT_ENABLED = "SDL_DIRECTINPUT_ENABLED";
export def XINPUT_USE_OLD_JOYSTICK_MAPPING = "SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING";
export def AUDIO_INCLUDE_MONITORS = "SDL_AUDIO_INCLUDE_MONITORS";
export def X11_WINDOW_TYPE = "SDL_X11_WINDOW_TYPE";
export def QUIT_ON_LAST_WINDOW_CLOSE = "SDL_QUIT_ON_LAST_WINDOW_CLOSE";
export def VIDEODRIVER = "SDL_VIDEODRIVER";
export def AUDIODRIVER = "SDL_AUDIODRIVER";
export def KMSDRM_DEVICE_INDEX = "SDL_KMSDRM_DEVICE_INDEX";
export def TRACKPAD_IS_TOUCH_ONLY = "SDL_TRACKPAD_IS_TOUCH_ONLY";

// An enumeration of hint priorities.
export type hint_priority = enum {
	DEFAULT,
	NORMAL,
	OVERRIDE,
};

// Set a hint with a specific priority.
//
// The priority controls the behavior when setting a hint that already has a
// value. Hints will replace existing hints of their priority and lower.
// Environment variables are considered to have override priority.
export fn set_hint_with_priority(
	name: str,
	value: str,
	priority: hint_priority,
) bool = {
	const name_c = c::fromstr(name);
	defer free(name_c);
	const value_c = c::fromstr(value);
	defer free(value_c);
	return SDL_SetHintWithPriority(name_c, value_c,
		priority: SDL_HintPriority);
};

// Set a hint with normal priority.
//
// Hints will not be set if there is an existing override hint or environment
// variable that takes precedence. You can use [[set_hint_with_priority]] to
// set the hint with override priority instead.
export fn set_hint(name: str, value: str) bool = {
	const name_c = c::fromstr(name);
	defer free(name_c);
	const value_c = c::fromstr(value);
	defer free(value_c);
	return SDL_SetHint(name_c, value_c);
};

// Reset a hint to the default values.
//
// This will reset a hints to the value of the associated environment variable,
// or null if the environment isn't set. Callbacks will be called normally with
// this change.
export fn reset_hint(name: str) bool = {
	const name_c = c::fromstr(name);
	defer free(name_c);
	return SDL_ResetHint(name_c);
};

// Reset all hints to the default values.
export fn reset_hints() void = SDL_ResetHints();

// Get the value of a hint variable.
export fn get_hint(name: str) (void | str) = {
	const name_c = c::fromstr(name);
	defer free(name_c);
	return match (SDL_GetHint(name_c)) {
	case null =>
		yield void;
	case let cs: *c::char =>
		yield c::tostr(cs)!;
	};
};

// Get the boolean value of a hint variable, or the default value if the hint
// does not exist.
export fn get_hint_boolean(name: str, default_value: bool) bool = {
	const name_c = c::fromstr(name);
	defer free(name_c);
	return SDL_GetHintBoolean(name_c, default_value);
};

// TODO: We can consider hint callbacks with a wrapper around the callback fn.
